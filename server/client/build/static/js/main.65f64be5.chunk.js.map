{"version":3,"sources":["styles/images/gitlab.png","App.js","components/HomePageComponent.js","components/ListUrlComponent.js","components/loadingSpinner.js","components/AddGitURL.js","routers/AppRouter.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","console","log","fetch","method","headers","Accept","Content-Type","body","then","res","json","react_default","a","createElement","className","src","logo","alt","id","href","Component","HomePageComponent","AppBar_default","position","Toolbar_default","Link","to","IconButton_default","color","aria-label","Home_default","Typography_default","variant","Rx","require","ListUrlComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","listdata","_this2","from","setState","components_HomePageComponent","map","x","Card_default","CardHeader_default","avatar","Avatar_default","CheckCircle_default","title","subheader","React","loadingSpinner","CircularProgress_default","thickness","AddGitURL","handleClickButton","loading","document","getElementById","value","context","components_loadingSpinner","clearResult","printResponse","pipe","filter","data","subscribe","_this$state","Paper_default","elevation","TextField_default","label","type","name","autoComplete","margin","onFocus","Button_default","onClick","AppRouter","HashRouter","Route","path","component","exact","Switch","Boolean","window","location","hostname","match","ReactDOM","render","routers_AppRouter","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.65f64be5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gitlab.11d38b71.png\";","import React, { Component } from 'react';\nimport logo from './styles/images/gitlab.png';\nimport './styles/App.css';\n\n\nclass App extends Component {\n\n  test() {\n    console.log(\"clicked\");\n    const url = \"https://github.com/yravinderkumar33/portfolio.git\";\n    fetch(`/deploy`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: url\n    })\n      .then(res => { return res.json() })\n      .then(res => console.log(res))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <a className=\"App-link\" id=\"loginButton\" href=\"http://localhost:5000/auth\"> Connect using Gitlab </a>\n          {/* <button onClick={this.test}> test </button> */}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/*eslint react/jsx-filename-extension: 0 */\n\nimport React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Home from '@material-ui/icons/Home';\nimport { Link } from 'react-router-dom';\n\nimport '../styles/homepage.css';\n\nfunction HomePageComponent() {\n  return (\n    <div className=\"root\">\n      <AppBar position=\"static\" className=\"app\">\n        <Toolbar>\n          <Link to={`/home`} className=\"lnk\">\n            <IconButton className=\"menuButton\" color=\"inherit\" aria-label=\"Menu\">\n              <Home />\n            </IconButton>\n          </Link>\n          <Link to={`/listUrl`} className=\"lnk\">\n          <Typography variant=\"h6\" color=\"inherit\" className=\"grow\">\n             App \n          </Typography>\n          </Link>\n          <Link to={`/newApp`} className=\"lnk\">\n          <Typography variant=\"h6\" color=\"inherit\" className=\"grow\">\n             NewApp \n          </Typography>\n          </Link>\n          <span className=\"heading\">\n          Rx-Actor Model</span>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default HomePageComponent;\n","/*eslint react/jsx-filename-extension: 0 */\n/*eslint react/prop-types: 0 */\n\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport CheckCircle from '@material-ui/icons/CheckCircle';\nimport HomePageComponent from './HomePageComponent';\nimport '../styles/ListUrlComponent.css';\n//import queryString from \"query-string\";\nconst Rx = require('rxjs');\n\nclass ListUrlComponent extends React.Component {\n  // const token = queryString.parse(props.location.search).token;\n  // if (!token) {\n  //     window.localStorage.setItem(\"jwt\",token);\n  //     props.history.push(\"/\");\n  //  }\n  constructor(props){\n    super(props);\n    this.state = {\n      listdata: []\n    };\n  }\n\n  \n  componentWillMount(){\n    Rx.from(fetch(`/apps`)\n             .then(res => {\n               console.log(res);\n               this.setState({listdata: res})\n             }))\n  }\n  \n  render(){\n  //const { classes } = this.props;\n  const data = ['css', 'html', 'javascript', 'nodejs'];\n  return (\n    <div>\n      <HomePageComponent />\n      {data.map((x) =>\n          <div className=\"root\">\n            <Card className=\"card\">\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"Recipe\" className=\"avatar\">\n                    <CheckCircle className=\"checkCircle\" />\n                  </Avatar>\n                }\n                title={x}\n                subheader=\"September 14, 2016\"\n              />\n            </Card>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n}\nexport default (ListUrlComponent);\n\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction loadingSpinner(props) {\n  return (\n    <div>\n      <CircularProgress className= \"progress\" thickness={7} />\n    </div>\n  );\n}\n\nexport default (loadingSpinner);","/*eslint react/jsx-filename-extension: 0 */\n/* eslint react/forbid-prop-types: 0 */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport HomePageComponent from './HomePageComponent';\nimport ProgressBar from './loadingSpinner';\nimport queryString from \"query-string\";\nimport '../styles/AddGitUrl.css';\n\nimport * as Rx from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n\nclass AddGitURL extends React.Component {\n    \n    constructor(props){\n        super(props);\n\n        this.state = {\n            context: '',\n            printResponse: ''\n        }\n    }\n\n    componentDidMount() {\n        // const token = queryString.parse(this.props.location.search).token;\n        // if (!token) {\n        //     window.localStorage.setItem(\"jwt\",token);\n        //     this.props.history.push(\"/\");\n        // }\n        \n        console.log('before rxjs');\n        Rx.fromEvent(document.getElementById(\"outlined-email-input\"), \"click\")\n        .pipe(map(() => {\n           console.log('inside map');\n           return document.getElementById(\"outlined-email-input2\").value;\n         }),\n           filter((data) => {\n               return data !== \"\"\n           }))\n        .subscribe((data) => {\n        console.log(\"data\", data);\n        const url = data;\n        fetch(`/deploy`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n            },\n            body: url\n        })\n        .then(res => res.json())\n        .then(res => {\n            console.log('condition', res);\n            console.log('before: ',this.state.context);\n            if(res){\n                this.setState({context: '', printResponse:(<p>URL deployed successfully : {res}</p>)})    \n            }\n            console.log('after: ',this.state.context);\n            document.getElementById(\"outlined-email-input2\").value = ''\n            return res;\n        })\n        .then(res => console.log('this is res: ',res))\n        })\n        console.log('after rxjs');   \n    } \n        \n    \n    handleClickButton = ()  => {\n        console.log('inside handleClickButton', this.state.loading);\n        if(document.getElementById(\"outlined-email-input2\").value){\n            this.setState({\n                context: <ProgressBar />\n\n            })    \n        } \n    }\n\n    clearResult = () => {\n        this.setState({\n            printResponse: ''\n        })\n    }\n    \n    render() {\n        const { context,printResponse } = this.state;\n        return (\n            <div className=\"main\">\n                <HomePageComponent/>\n                <Paper className=\"root1\" elevation={20}>\n                    <div className=\"text1\">\n                        <TextField\n                            id=\"outlined-email-input2\"\n                            label=\"GitURL\"\n                            className=\"textField1\"\n                            type=\"email\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onFocus={this.clearResult}\n                        />\n\n                        <Button \n                            variant=\"outlined\" \n                            color=\"primary\" \n                            className=\"button1\" \n                            id=\"outlined-email-input\" \n                            name=\"buttonSubmit\"\n                            onClick={this.handleClickButton} \n                        > \n                            Deploy     \n                        </Button>\n                        { context }\n                        { printResponse }\n                    </div>\n                </Paper>\n            </div>\n        )\n        \n    }\n}\n\n\nexport default AddGitURL;\n\n\n\t\n\t\n\t\n","/*eslint react/jsx-filename-extension: 0 */\n\nimport React from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport App from '../App';\nimport ListUrlComponent from '../components/ListUrlComponent';\nimport AddGitURL from '../components/AddGitURL';\nimport HomePageComponent from '../components/HomePageComponent';\n\n\nfunction AppRouter () {\n   return ( <HashRouter>\n    <div>\n        <Route  path='/' component={App} exact={true} />\n        <Switch>\n            <Route  path='/home'  component={HomePageComponent}  />\n            <Route  path='/listUrl'  component={ListUrlComponent} />\n            <Route  path='/newApp'  component={AddGitURL} />\n        </Switch>\n    </div>\n    </HashRouter>)\n}\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport AppRouter from './routers/AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}